////题目：有一棵无穷大的满二叉树，其结点按根结点一层一层地从左往右依次编号，根结点编号为1。现在有两个结点a，b。
////请设计一个算法，求出a和b点的最近公共祖先的编号。给定两个int a, b。
////为给定结点的编号。请返回a和b的最近公共祖先的编号。
////注意这里结点本身也可认为是其祖先
////
////测试样例：
////2，3
////返回：1
////我的思路：1.由于树由1开始，所以每个节点的父节点的值为当前值除2
////2.先获取输入的较大值，因为两个值可能不在同一层，较大值除2后若小于较小值则到达了较小值的上一层。
////3.一直循环让较大值除2，直到较大值和较小值相等，则此值为他们最近的公共祖先
//class LCA {
//public:
//	int getLCA(int a, int b) {
//		// write code here
//		while (a!=b)
//		{
//			if (a > b)
//			{
//				a /= 2;
//			}
//			else
//				b /= 2;
//		}
//		return a;
//	}
//};